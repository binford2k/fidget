#! /usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'fidget'

options  = []
optparse = OptionParser.new { |opts|
    opts.banner = "Usage : fidget [-o <options>] [command]

Cross platform utility to prevent your system from sleeping.

Sleep options may very between platforms. Each platform will include at least
the following core options:
  * 'display' will prevent the display from sleeping.
  * 'sleep' prevent the system from sleeping.
  * 'all' to declare all known options.

Additional OS X options:
  * 'idle' will prevent the system from idle sleeping.
  * 'disk' will prevent the disk from sleeping.
  * 'user' will assert that the user is active. This keeps the display
           on and prevents idle sleep.

Additional Windows options:
  * 'away' enables a low-power, but not sleeping, mode on Windows.
  * `simulate` will simulate a user keyboard action every few seconds.

Additional Linux options:
  * 'blanking' disables terminal blanking on Linux.

Default options for each platform:
  * OS X: `user`
  * Linux: `display`
  * Windows: `display,sleep`

If you pass the a command, then Fidget will execute that command and prevent
the system from sleeping until that command terminates. If you do not provide a
command, then Fidget will prevent sleeping until you press Ctrl-C to terminate.

"
    opts.on("-o OPTIONS", "--options OPTIONS", "Comma separated list of sleep options.") do |arg|
        options = arg.split(',').map{ |e| e.to_sym }
    end

    opts.on("-d", "--debug", "Display debugging messages") do
        Fidget.debuglevel = Logger::DEBUG
    end

    opts.on("-v", "--version", "Display the version of Fidget") do
        puts Fidget::VERSION
        exit(0)
    end

    opts.separator('')

    opts.on("-h", "--help", "Displays this help") do
        puts
        puts opts
        puts
        exit
    end
}
optparse.parse!

begin
  if ARGV.size > 0
    command = ARGV.join ' '

    Fidget.prevent_sleep(options) do
      system(command)
    end
  else
    Fidget.current_process(options)
    puts 'System has been prevented from sleeping.'
    print '- Press Ctrl-C to resume normal power management.'
    sleep
  end
rescue Interrupt => e
  puts "\nNormal power management resumed."
end
